# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uoq6_nkd6mYpfkBChUmVKQpFmzSf7VFj
"""

from collections import Counter
def get_unigrams (text):
 words =text.split()
 unigrams= Counter (words)
 return unigrams
text = "NLP assignment one"
unigrams = get_unigrams (text)
print("1. Unigrams: \n", unigrams)
print ("")
from collections import Counter
from nltk import bigrams
def get_bigrams (text):
 words=text.split()
 bigrams_list = list(bigrams (words))
 bigrams_count = Counter (bigrams_list)
 return bigrams_count
text = "here is a bigram example "
bigrams = get_bigrams (text)
print("2.Bigrams: \n", bigrams)
print("")
from collections import Counter
from nltk import trigrams
def get_trigrams (text):
 words =text.split()
 trigrams_list = list(trigrams (words))
 trigrams_count = Counter (trigrams_list)
 return trigrams_count
text = "example of trigram in nlp"
trigrams = get_trigrams (text)
print("3. Trigrams: \n", trigrams)
print (" ")
from collections import Counter, defaultdict
from nltk import bigrams
def get_bigram_probabilities (text):
 words=text.split()
 bigrams_list = list(bigrams (words))
 bigram_freq = Counter (bigrams_list)
 unigram_freq = Counter (words)
 bigram_probabilities = defaultdict(float)
 for bigram in bigram_freq:
  bigram_probabilities [bigram] = bigram_freq [bigram] / unigram_freq[bigram[0]]
 return bigram_probabilities
text = "example sentences for bigram probabilities "
bigram_probabilities = get_bigram_probabilities (text)
print("4.Bigram probabilities: \n", bigram_probabilities)
print("")
def predict_next_word(text, word):
 bigram_probabilities = get_bigram_probabilities (text)
 candidates = {bigram [1]: prob for bigram, prob in bigram_probabilities.items() if bigram [0] == word}
 if not candidates:
  return None
 next_word = max(candidates, key=candidates.get)
 return next_word
text = "example text for predicting next word"
word="predicting"
next_word = predict_next_word(text, word)
print("5. Predicted nxt wrd: \n", next_word)